@model Nop.Plugin.Payments.BerkutPay.Models.PaymentInfoModel

@{
    Layout = "";
}

@{
    var iconUrl_YKB = Url.Content("~/Plugins/Payments.BerkutPay/Content/icons/YKB_Icon.png");
    var iconUrl_VB = Url.Content("~/Plugins/Payments.BerkutPay/Content/icons/VakıfBank_Icon.png");
}

<style>
    #installment-options label {
        display: inline-flex;
        align-items: center;
        border: 1px solid #ccc;
        padding: 5px;
        margin-bottom: 5px;
        background-color: #f1f1f1;
        border-radius: 5px;
        width: 100%;
    }

    #installment-options input[type="radio"] {
        margin-right: 5px;
    }

    #installment-row {
        text-align:center;
        display: none;
    }

    #bank-icon{
        text-align:center;
    }

    #installment-options {
        display: inline-block;
        max-width: 150px;
    }

</style>

<table width="100%" cellspacing="2" cellpadding="1" border="0">
    <tr style="display:none">
        <td>
            <label asp-for="CreditCardTypes">@T("Payment.SelectCreditCard"):</label>
        </td>
        <td>
            <select asp-for="CreditCardType" asp-items="Model.CreditCardTypes" class="dropdownlists"></select>
        </td>
    </tr>
    <tr>
        <td>
            <label asp-for="CardholderName">@T("Payment.CardholderName"):</label>
        </td>
        <td>
            <input type="text" asp-for="CardholderName" autocomplete="off" />
            <span asp-validation-for="CardholderName"></span>
        </td>
    </tr>
    <tr>
        <td>
            <label asp-for="CardNumber">@T("Payment.CardNumber"):</label>
        </td>
        <td>
            <input type="text" asp-for="CardNumber" autocomplete="off" maxlength="22" />
        </td>
    </tr>
    <tr>
        <td>
            <label asp-for="ExpireMonth">@T("Payment.ExpirationDate"):</label>
        </td>
        <td>
            <select asp-for="ExpireMonth" asp-items="Model.ExpireMonths"></select>
            /
            <select asp-for="ExpireYear" asp-items="Model.ExpireYears"></select>
        </td>
    </tr>
    <tr>
        <td>
            <label asp-for="CardCode">@T("Payment.CardCode"):</label>
        </td>
        <td>
            <input type="text" asp-for="CardCode" autocomplete="off" maxlength="4" />
            <span asp-validation-for="CardCode"></span>
        </td>
    </tr>
</table>

<div id="bank-icon" style="display:none;"></div>

<div id="installment-row">
    <div id="installment-options">
        <label for="installment-1"><input type="radio" id="installment-1" name="installment" value="1" checked> Peşin</label>
        <label for="installment-2"><input type="radio" id="installment-2" name="installment" value="2"> 2 taksit</label>
        <label for="installment-3"><input type="radio" id="installment-3" name="installment" value="3"> 3 taksit</label>
        <label for="installment-4"><input type="radio" id="installment-4" name="installment" value="4"> 4 taksit</label>
        <label for="installment-6"><input type="radio" id="installment-6" name="installment" value="6"> 6 taksit</label>
    </div>
</div>


<script>

    // 'loadXLSX' fonksiyonu, XLSX kütüphanesini dinamik olarak yükleyin
    // Yükleme tamamlandığında, verilen 'callback' fonksiyonunu çalıştırın
    function loadXLSX(callback) {
        var script = document.createElement('script');
        script.src = 'https://unpkg.com/xlsx@0.17.0/dist/xlsx.full.min.js';
        script.onload = function () {
            if (callback) callback();
        };
        script.onerror = function () {
            console.error('XLSX kütüphanesi yüklenemedi');
        };
        document.head.appendChild(script);
    }
</script>
<script>
    
    // Yapı Kredi BIN numaralarını saklayan değişken
    let yapiKrediBinsCache;

    // Yapı Kredi BIN numaralarını başlatmayı deneyin
    async function initYapiKrediBins() {
        if (!yapiKrediBinsCache) {
            yapiKrediBinsCache = await fetchYapiKrediBins();
        }
    }

    // Yapı Kredi BIN numaralarını XLSX dosyasından almak için bu fonksiyonu kullanın
    async function fetchYapiKrediBins() {
        const proxyUrl = "https://cors-anywhere.herokuapp.com/"; //değişmesi gerek
        const targetUrl =
            "https://www.yapikredipos.com.tr/_assets/files/8_digit_bin_listesi_yapikredi.xlsx";
        const url = proxyUrl + targetUrl;
        const response = await fetch(url);
        const arrayBuffer = await response.arrayBuffer();
        const data = new Uint8Array(arrayBuffer);
        const workbook = XLSX.read(data, { type: "array" });
        const sheetName = workbook.SheetNames[0];
        const worksheet = workbook.Sheets[sheetName];
        const jsonData = XLSX.utils.sheet_to_json(worksheet);
        return jsonData;
    }

    // Belirli bir BIN numarasının Yapı Kredi'ye ait olup olmadığını kontrol etmek için bu fonksiyonu kullanın
    function checkIfYapiKredi(bin, bins) {
        bin = parseInt(bin, 10);
        const entry = bins.find((entry) => entry["BIN"] === bin);
        return entry ? entry["KART TİPİ"] : null;
    }

    // Taksit seçeneklerini gösterme veya gizleme işlevi
    function showInstallmentOptions(cardType) {
        if (cardType && cardType.toLowerCase().includes("kredi")) {
            document.querySelector("#installment-row").style.display = "block";
        } else {
            document.querySelector("#installment-row").style.display = "none";
        }
    }

    // Kart numarası alanındaki değişiklikleri izleyin
    document.querySelector("#CardNumber").addEventListener("input", async (event) => {
        const inputValue = event.target.value;

        if (inputValue.length >= 8) {
            const firstEightDigits = inputValue.slice(0, 8);
            const cardType = checkIfYapiKredi(firstEightDigits, yapiKrediBinsCache);

            // Eğer kart Yapı Kredi'ye aitse, banka ikonunu ve taksit seçeneklerini göster
            if (cardType) {
                showInstallmentOptions(cardType);
                document.querySelector("#bank-icon").innerHTML = `<img src="@iconUrl_YKB" alt="Yapı Kredi" />`;
                document.querySelector("#bank-icon").style.display = "block";
            } else {
                // Kart Yapı Kredi'ye ait değilse, banka ikonunu ve taksit seçeneklerini gizle
                document.querySelector("#bank-icon").innerHTML = "";
                document.querySelector("#bank-icon").style.display = "none";
                document.querySelector("#installment-row").style.display = "none";
            }
        } else {
            // Kart numarası 8 haneden kısaysa, banka ikonunu ve taksit seçeneklerini gizle
            document.querySelector("#bank-icon").innerHTML = "";
            document.querySelector("#bank-icon").style.display = "none";
            document.querySelector("#installment-row").style.display = "none";
        }
    });

    // XLSX kütüphanesini yükleyin ve Yapı Kredi BIN numaralarını başlatın
    loadXLSX(initYapiKrediBins);

</script> @*YapıKredi*@
<script>

    //let vakifBinsCache;

    //async function initVakifBins() {
    //    if (!vakifBinsCache) {
    //        vakifBinsCache = await fetchVakifBins();
    //    }
    //}

    //async function fetchVakifBins() {
    //    const proxyUrl = "https://cors-anywhere.herokuapp.com/"; //değişmesi gerek
    //    const targetUrl =
    //        "https://www.yapikredipos.com.tr/_assets/files/8_digit_bin_listesi_vakifbank.xlsx";
    //    const url = proxyUrl + targetUrl;
    //    const response = await fetch(url);
    //    const arrayBuffer = await response.arrayBuffer();
    //    const data = new Uint8Array(arrayBuffer);
    //    const workbook = XLSX.read(data, { type: "array" });
    //    const sheetName = workbook.SheetNames[0];
    //    const worksheet = workbook.Sheets[sheetName];
    //    const jsonData = XLSX.utils.sheet_to_json(worksheet);
    //    return jsonData;
    //}

    //function checkIfVakif(bin, bins) {
    //    bin = parseInt(bin, 10);
    //    const entry = bins.find((entry) => entry["BIN"] === bin);
    //    return entry ? entry["KART TİPİ"] : null;
    //}

    //function showInstallmentOptions(cardType) {
    //    if (cardType && cardType.toLowerCase().includes("kredi")) {
    //        document.querySelector("#installment-row").style.display = "block";
    //    } else {
    //        document.querySelector("#installment-row").style.display = "none";
    //    }
    //}

    //document.querySelector("#CardNumber").addEventListener("input", async (event) => {
    //    const inputValue = event.target.value;

    //    if (inputValue.length >= 8) {
    //        const firstEightDigits = inputValue.slice(0, 8);
    //        const cardType = checkIfVakif(firstEightDigits, vakifBinsCache);

    //        if (cardType) {
    //            showInstallmentOptions(cardType);
    //            document.querySelector("#bank-icon").innerHTML = `<img src="@iconUrl_VB" alt="Vakıf Bank" />`;
    //            document.querySelector("#bank-icon").style.display = "block";
    //        } else {
    //            document.querySelector("#bank-icon").innerHTML = "";
    //            document.querySelector("#bank-icon").style.display = "none";
    //            document.querySelector("#installment-row").style.display = "none";
    //        }
    //    } else {
    //        document.querySelector("#bank-icon").innerHTML = "";
    //        document.querySelector("#bank-icon").style.display = "none";
    //        document.querySelector("#installment-row").style.display = "none";
    //    }
    //});

    //loadXLSX(initVakifBins);

</script> @*VakıfBank*@
